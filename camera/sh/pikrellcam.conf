# ==================================================================
#               pikrellcam Program Configuration
#
# When editing this file, stop and then restart pikrellcam so your changes
# will be in effect.  Otherwise, pikrellcam may overwrite this file and your
# changes will be lost.
# Commands in this file should not be enclosed in quotes and commands may
# have substitution variables.
# See ~/.pikrellcam/at_commands.conf for a list of the substitution variables.
# The web interface can modify many settings here but caonnot modify any
# commands or filename templates.  If a setting is modified from the web
# interface, this file will be written.
#
# ----------------------------------------------------------
#
# The PiKrellCam installation directory.
# This must match where PiKrellCam is installed and it is checked by
# the install-pikrellcam.sh script.  This should not need to be edited.
#
install_dir /home/pi/pikrellcam

# If media_dir has no leading '/' it will be a sub directory in install_dir.
# Otherwise it is a full pathname to the media directory.
# So the default media dir is /home/pi/pikrellcam/media.
# An alternate choice could be /home/pi/media if you set the full path.
# Even /tmp/media with /tmp a tmpfs can be an option for a setup that
# will manage by hand or script the limited space available.
# A file system may be mounted on the media dir in the startup script.
#
media_dir media

# If archive_dir has no leading '/' it will be a sub directory under media_dir.
# Otherwise it is a full pathname to the archive directory.
# So the default archive dir is /home/pi/pikrellcam/media/archive.
# When media files are archived, they will be moved to sub directories:
#     archive_dir/year/month/day/[videos|thumbs|stills]
# A file system may be mounted on the archive dir in the startup script.
#
archive_dir archive

# If loop_dir has no leading '/' it will be a sub directory under media_dir.
# Otherwise it is a full pathname to the loop directory.
# So the default archive dir is /home/pi/pikrellcam/media/loop.
# A file system may be mounted on the loop dir in the startup script.
#
loop_dir loop

# Log file.
#
log_file /tmp/pikrellcam.log

# At startup and at each new day, trim the log file number of lines
# to log_lines.  If log_lines is 0 the log file is not trimmed.
#
log_lines 500

# Command to run at PiKrellCam startup.  This is run after the config
# files are loaded but before the camera is started or directories
# are checked.  If you want a start command that runs after the camera
# is started, add a command to the file: ~/.pikrellcam/at-commands.conf.
# The default on_startup script can mount a disk on the media_dir
# and NFS mount a directory on the archive_dir.  See the web help page.
# Edit MOUNT_DISK and NFS_ARCHIVE in the script to enable mounting.
# As of V 4.1.5, the default scripts-dist/startup script needs:
#   on_startup  $C/startup $I $m $a $G
#
on_startup $C/startup $I $m $a $G

# Set to off to disable accepting halt and reboot commands
# from the FIFO and the web page.
#
halt_enable on

# Set to off to disable the multicast interface.
#
multicast_enable on


# -------------------- Loop Record Options -----------------------
# Enable loop recording at startup.
#
loop_enable off

# Time length limit of a loop video record.
#
loop_record_time_limit 30

# Loop videos disk usage max percent (5 - 95).  Oldest loop videos are
# deleted to limit loop video disk usage to this percent.
# Loop videos are also subject to diskfree_percent deletion.
#
loop_diskusage_percent 30


# -------------------- Motion Detect Options -----------------------
# PiKrellCam V3.0 stores some motion detect settings in preset-xxx.conf
# Vector and burst limits/counts are no longer saved in pikrellcam.conf.
#
# Enable pikrellcam motion detection at startup
#
motion_enable off

# If off, do not detect motion when servos are off a preset.
#
motion_off_preset off

# Time length limit of motion video record excluding pre_capture time.
# If zero, there is no time limit or else the minimum is 10 seconds.
#
motion_record_time_limit 0

# Percent to dim image when drawing motion vectors.  Range 30 - 60
#
motion_vectors_dimming 45

# Require a second motion detect within this period of seconds before
# triggering a real motion detect event.  Set to zero to not require a
# second confirming motion detect.
#
motion_confirm_gap 4

# event_gap seconds since the last motion detect event must pass
# before a motion video record can end.  Each motion detect within
# an event_gap resets a new full event_gap period.  When an event gap period
# does expire without a new motion event occurring, the video will end with
# an end time of the last motion detect time plus the post_capture time.
#
motion_event_gap 30

# Seconds of video that will be recorded in a motion video before the
# time of the first motion event.
#
motion_pre_capture 20

# Seconds of video that will be recorded after the last motion event.
# motion_post_caputure must be <= motion_event_gap.
#
motion_post_capture 20

# Command/script to run when a motion detect event begins.
#     $e variable gives the trigger: motion audio FIFO (or FIFO code)
#
#on_motion_begin 

# Command/script to run when a motion detect record ends.
# The motion_end script uses scp to immediately archive motion detect
# videos to a different computer.
# To enable this, add your machine information to the motion-end script
# and make this the on_motion_end command:
#   on_motion_end $C/motion-end $v $P $G
#
#on_motion_end 

# Command/script to run when a motion enable changes.
# $o variable is enabled state: on|off
#   on_motion_enable $C/motion-enable-script $o
#
#on_motion_enable 

# Command/script to run when a loop record ends.
# If motion is enabled and detected during the loop video, the
# on_motion_end command is run instead of on_loop_end.
#
#on_loop_end 

# Command/script to run when a manual record ends.
#
#on_manual_end 

# When to save the motion preview file.
#     first  - when motion is first detected.
#              The on_motion_preview_save command runs immediately.
#     best   - best motion based on vector count and position.
#              The on_motion_preview_save command runs at motion end.
#
motion_preview_save_mode best

# Command to run on the motion preview jpeg file.
# Specify the preview jpeg file name with $F.
# A jpeg thumb of the motion area is automatically extracted from the
# preview jpeg and saved to the thumbs directory.  However, if you
# want to do something else with the motion area, the motion detect
# area in the jpeg can be passed to this command with these substitution
# variables
#     $i  width of the area
#     $J  height of the area
#     $K  x coordinate of the area center
#     $Y  y coordinate of the area center
#     $A  the filename of the thumb jpeg of the motion area
#         But if save mode is first and the first detect is audio or external:
#            1) The thumb jpeg is of the preview jpeg and not a motion.
#            2) The thumb jpeg will be renamed if there is later motion.
#         
# Example command to email the motion detect preview jpeg:
#     on_motion_preview_save mpack -s pikrellcam@$H $F myuser@gmail.com
# Or, example command to run the default preview-save script which you
# can edit to enable emailing or copying the jpeg.
#     on_motion_preview_save $C/preview-save  $F $m $P $G $A
#
#on_motion_preview_save 

# Set to off if you want jpeg preview files to show the OSD overlay text
# or graphics.  This can be considered a debug or instructional option.
# Normally it is nicer to have clean preview jpegs and thumbs.
#
motion_preview_clean on

# If on, show extra vector count data on the OSD when presets are shown.
#
motion_show_counts off

# Minimum width and height in pixels for the substitution width and height
# variables for motion detect areas in the preview jpeg.
# This minimum helps with possible frame skew for smaller relatively
# faster moving objects.
#
motion_area_min_side 80

# Enable writing a motion statistics .csv file for each motion video.
# For users who have a need for advanced video post processing.
#
motion_stats off

# Command/script to run when receiving a user defined multicast
# pkc-message sent by other PiKrellCams or separate scripts on your LAN.
# Use this to run a script needing PiKrellCam variables passed to it,
# otherwise just multicast a command to directly execute scripts.
# Once a multicast originated script is running, it can be programmed
# to accept additional multicasts of user defined message types.
# PiKrellCam itself accepts message types of "command" and "pkc-message".
# See the help page.
#
#on_multicast_pkc_message 


# -------------------- Audio Trigger Options -----------------------
# Enable audio events to trigger a motion video.
#
audio_trigger_video off

# Audio level to trigger a motion video, range 2 - 100
#
audio_trigger_level 50

# If this is on and an there is no video motion detected during a video
# triggered by audio, then do not include the h264 video in the boxing.
# See the help page.
#
box_MP3_only off


# --------------------- Video Record Options -----------------------
#
# Motion record video name format.
# PHP web page code depends on parsing this name format so there is
# very little flexibility for changing it.
# strftime() specifiers must not be changed except for possibly using %T.
# But only a recent gpac release can handle ':' in a video filename
# and you may not be able to use the %T specifier which is %H:%M:%S
# The %F specifier is the same as %Y-%m-%d and should not be changed.
# The final name must be of the form:
#   hhh_date_time_ttt.mp4
# where the hhh and ttt fields must not contain the '_' character.
# The format may use substitution variables in the hhh and ttt fields:
#     $N - The motion video sequence number
#     $H - The hostname
# 
# A possible edit you can make to the default would be to add using the
# hostname variable or replace the $N sequence number with the hostname
# variable.  For example, if your hostname is rpi0, the current sequence
# number is 99, these formats produce these motion video file names:
#   motion_%F_%H.%M.%S_$N.mp4    => motion_2016-01-09_10.44.08_99.mp4
#   motion-$H_%F_%H.%M.%S_$N.mp4 => motion-rpi0_2016-01-09_10.44.08_99.mp4
#   motion_%F_%H.%M.%S_$H.mp4    => motion_2016-01-09_10.44.08_rpi0.mp4
#   $H_%F_%H.%M.%S_$N.mp4        => rpi0_2016-01-09_10.44.08_99.mp4
# or if ':' in names is supported by your version of gpac:
#   motion_%F_%T_$N.mp4          => motion_2016-01-09_10:44:08_99.mp4
# 
# Unsupported option:
# By default video files are boxed into a .mp4 video but it is possible
# to leave the video in the Pi camera raw video .h264 format if the .mp4
# in the name format is replaced with .h264.
# But h264 videos cannot be played from the web page or programs
# like vlc and mplayer so changing to h264 should be done only if you
# have a way to manage the videos.  PiKrellCam webpages do not support
# or manage .h264 videos.
#
video_motion_name_format motion_%F_%H.%M.%S_$N.mp4

# Manual record video name format.
# This format is similar to the video_motion_name_format except it has
# the added restriction that it must begin with "man" so that the
# web page can differentiate motion videos from manual videos.
# The final name must be of the form:
#   manhhh_date_time_ttt.mp4
# where the hhh and ttt fields must not contain the '_' character.
# The format may use substitution variables in the hhh and ttt fields:
#     $N - The manual video sequence number
#     $H - The hostname
# 
# So some possibilities are:
#   manual_%F_%H.%M.%S_$N.mp4    => manual_2016-01-09_10.44.08_99.mp4
#   man-$H_%F_%H.%M.%S_$N.mp4    => man-rpi0_2016-01-09_10.44.08_99.mp4
#   manual_%F_%H.%M.%S_$H.mp4    => manual_2016-01-09_10.44.08_rpi0.mp4
#   man_%F_%H.%M.%S_$H-$N.mp4    => man_2016-01-09_10.44.08_rpi0-99.mp4
#
video_manual_name_format _$H_video_%F_%H.%M.%S.mp4

# Disk free percent (5 - 90).  Loop vidoes and, if enabled, media videos
# and archived videos are deleted to maintain at least this free percent.
#
diskfree_percent 20

# If on, check the media file system as each video is recorded and
# delete the oldest media to maintain the free percent.
#
check_media_diskfree off

# If on, check the archive file system as each video is archived and
# delete the oldest archived videos to maintain the free percent.
# Not useful if the archive file system is the same as the media.
#
check_archive_diskfree off

# Pixel width of videos recorded.
#
video_width 1920

# Pixel height of videos recorded.
#
video_height 1080

# Video frames per second.  The processing required to implement the
# multiple video paths in PiKrellCam limits this fps to about 24.
# Above that may cause web page mjpeg frames to be dropped.  But if
# you are overclocking the GPU you may be able to set higher.
#
video_fps 24

# MP4Box output frames per second if video filename is a .mp4
# If this is non zero and different from video_fps, the final mp4 will
# be a slow or fast motion video.
# Normally leave this set to zero so it will track video_fps.
#
video_mp4box_fps 0

# Video bitrate affects the quality and size of a video recording.
# Along with pre_capture and event_gap times, it also determines the
# PiKrellCam video circular buffer memory usage.
# Set the bitrate lower or higher as you wish to trade off video size
# and memory usage with video quality.  The Pi camera lens and sensor
# pixel size combination also can be a limiting factor on video quality
# and may limit the benefit of the highest bitrate settings.
#
video_bitrate 6000000

# Pixel width of the streamed jpeg file /run/pikrellcam/mjpeg.jpg.
# Aspect ratio is determined by the video resolution setting.
# This value will be rounded off to be a multiple of 16.
# If bandwith is a problem you can reduce mjpeg_quality to 5 without
# much loss of quality.
#
mjpeg_width 800

# Quality factor (up to 100) affects the quality and size of the stream jpeg.
# Set this lower if you need to reduce the stream bandwidth.  The value
# is not the same as quality factors in other jpeg programs and should
# be set lower than those programs.
#
mjpeg_quality 8

# Divide the video_fps by this to get the stream jpeg file update rate.
# This will also be the motion frame check rate for motion detection.
# For example if video_fps is 24 and this divider is 4, the stream jpeg file
# is updated and motion is checked 6 times/sec.
#
mjpeg_divider 4


# ------------------ Still Capture Options -----------------------
#
# Still file name format.
# This name is parsed by the PHP web page so restrictions are similar
# to the video_motion_name_format described above and must be of the form:
#   hhh_date_time_ttt.mp4
# where the hhh and ttt fields must not contain the '_' character.
#
# still_name_format may use substitution variables in hhh and ttt fields:
#     $N - The still capture sequence number
#     $H - The hostname
#
# Examples:
#   image_%F_%H.%M.%S_$N.jpg    => image_2016-01-09_10.44.08_99.jpg
#   im-$H_%F_%H.%M.%S_$N.jpg    => im-rpi0_2016-01-09_10.44.08_99.jpg
#   still_%F_%H.%M.%S_$H.jpg    => still_2016-01-09_10.44.08_rpi0.jpg
#
still_name_format _$H_image_%F_%H.%M.%S.jpg

# Width of a still capture in pixels.  Max value 2592
#
still_width 1920

# Height of a still capture in pixels.  Max value 1944
#
still_height 1080

# This quality factor affects the size and quality of still captures.
#
still_quality 14

# Command to run after a still capture.
# email the still somewhere with:
#   on_still_capture mpack -s pikrellcam@$H $s myuser@gmail.com
# Or do an email and/or something like copy or move the still somewhere
# with a script you write ($s is the still file pathname):
#   on_still_capture $C/still-capture $s $P $G
#
#on_still_capture 

# Timelapse name format.
# PHP web page code depends on parsing this name format so there is
# very little flexibility for changing it.
# The name must begin with the characters "tl" and the strftime()
# specifiers should not be changed except for possibly using %T as
# described above.  The $n variable should not be changed and is:
#     $n - a timelapse id which defaults to the period in seconds.
# So about the only possible edit you can make here is to add in the
# hostname with a format like:
#     tl-$H_%F_%H.%M.%S_$n.mp4
# This video name is used in $T in the timelapse_convert command.
#
video_timelapse_name_format tl_%F_%H.%M.%S_$n.mp4

# Command to run when a time lapse series is ended.
# The default timelapse_convert command is in the scripts-dist directory
# and converts captures in the media_dir/timelapse directory to a video
# which is saved in the media_dir/videos directory.
# If you want to use your own timelapse convert script, create the
# script in the scripts directory and set this timelapse_convert to
# use it (change the $c to $C and the script name to your script).
# NOTE: $l embeds a '%' qualifier in the command string so it
# can only be used as the last $X variable.
#
timelapse_convert $c/_timelapse-convert $m $T $n $G $P $l


# ------------------- Servo/Preset Options  -----------------------
#
# PiKrellCam can use internal hardware PWM code to drive servos and for
# this there is no extra install required.
# For hardware PWM, the pan/tilt or tilt/pan gpio pairs must be one of
#     12,13  12,19  18,13  18,19
# and these are Pi hardware gpio header pin numbers.
# 
# Or, PiKrellCam can use ServoBlaster and will then send servo commands
# to /dev/servoblaster.  But for this, a separate ServoBlaster install
# and configuration to run is required.
# For ServoBlaster, the PiKrellCam servo pan/tilt gpio values should not
# be Pi header gpio numbers but instead should be one of the ServoBlaster
# documented servo numbers 0 - 7.  See ServoBlaster documentation.
# 
# Leave the gpios at -1 if not using servos.
#
servo_pan_gpio -1

#
servo_tilt_gpio -1

# Set to true to use ServoBlaster for servos.  A separate install of
# ServoBlaster will be required.
#
servo_use_servoblaster off

# pan/tilt min/max values are best set using the web OSD.
# The value units are 0.01 msec, so for example, a servo_pan_min of
# 120 would limit the pan servo control pulse to a 1.2 msec minimum.
#
servo_pan_min 120

#
servo_pan_max 180

#
servo_tilt_min 130

#
servo_tilt_max 170

# Set invert values to on if the servo turns the wrong way.
#
servo_pan_invert off

#
servo_tilt_invert off

# Servo moves have three modes: move by one step, by servo_move_steps,
# or move continuous until stopped or a min/max limit is reached.
# Set here the number of steps wanted for the second mode.
#
servo_move_steps 10

# Delay in msec between servo pulse width steps for servo move commands.
#
servo_move_step_msec 40

# Delay in msec between servo pulse width steps when going to a preset.
#
servo_preset_step_msec 20

# Delay in msec after servo stops moving before enabling motion detection.
#
servo_settle_msec 600


# ------------------- Audio Options  -----------------------
#
# Set to true to capture audio to add to videos.  Web page control of
# the microphone toggle button sets this on/off
#
audio_enable on

# ALSA hardware audio input (microphone) capture device. Using the hw:N
# limits rate values to what the hardware supports.  So use the plughw:N
# plugin device to get a wider range of rates.
#
audio_device dmic_plug

# Audio rate.  See Help page for info on this and remaining audio options.
# Lame suggests using only MP3 supported sample rates:
#    8000 11025 12000 16000 22050 24000 32000 44100 48000
# Audio rate for a Pi model 2 (armv7 quad core Pi2/Pi3).
#
audio_rate_Pi2 48000

# Audio rate for a Pi model 1 (armv6 single core Pi1).
#
audio_rate_Pi1 48000

# Audio channels.  A USB sound card probably supports only mono and
# setting 2 channels for this case would be reverted to 1 when the
# microphone is opened.
#
audio_channels 1

# Microphone audio gain dB (0 - 30). Set using the web page audio
# gain up/down control buttons.
#
audio_gain_dB 20

# MP3 lame encode quality for a Pi2/3, range 0 - 9.
#
audio_mp3_quality_Pi2 2

# MP3 lame encode quality for a Pi1, range 0 - 9.
#
audio_mp3_quality_Pi1 7


# ------------------- Miscellaneous Options  -----------------------
#
# How long in seconds a notify string should stay on the stream jpeg file.
#
notify_duration 4

# Your latitude used to calculate sun rise, set, dawn, and dusk times.
#
latitude 30.12N

# Your longitude used to calculate sun rise, set, dawn, and dusk times.
#
longitude 97.88W

# Setting a locale to get annotated time shown in your language is
# not preserved when starting pikrellcam from the web page.  Set it
# here for pikrellcam to explicitely set it.
# 
# Example:  lc_time es_ES.utf8
#lc_time 

# Do not edit.  Used internally to force startup config write if needed.
#
config_sequence 45


# ------------------- Annotate Text Options  -----------------------
#
# Format for a date string that can be superimposed on videos and stills.
# Custom strings from scripts can be prepended or appended to this date string
# using the annotate_string FIFO command.  See the Help web page.
#
annotate_format_string %a %b %e, %l:%M.%S %p

# Enables drawing the annotate date string.
#
annotate_enable off

# Extra information drawn on the video.
#
annotate_show_motion off

# Extra information drawn on the video.
#
annotate_show_frame off

# Annotate text background color.  Set to "none" for no background.
# Otherwise, set to a hex rgb value, eg "000000" for black or "808080" for gray.
#
annotate_text_background_color none

# Annotate text brightness. Range: integer from 0 - 255
# Text cannot be set to a color, only to a brightness..
#
annotate_text_brightness 255

# Annotate text size. Range: integer from 6 - 160
#
annotate_text_size 40

# ==================================================================
#               Raspberry Pi Initial Camera Parameters
#
sharpness 0
contrast 0
brightness 50
saturation 0
iso 0
shutter_speed 0
exposure_compensation 0
video_stabilisation false
raw_capture false
rotation 0
exposure_mode auto
image_effect none
hflip off
vflip off
crop 0 0 65536 65536
metering_mode average
white_balance auto
color_effect false 128 128
